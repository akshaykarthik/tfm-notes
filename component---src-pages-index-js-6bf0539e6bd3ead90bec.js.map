{"version":3,"file":"component---src-pages-index-js-6bf0539e6bd3ead90bec.js","mappings":"ytBAIA,IAAMA,EAAa,CACjBC,MAAO,UACPC,QAAS,GACTC,WAAY,4CAoBRC,EAAa,CACjBC,aAAc,GACdC,YAAa,GAgBG,OAPA,CAChBL,MAAO,UACPM,WAAY,OACZC,SAAU,GACVC,cAAe,OAGC,IAEhBC,cAAe,OACfL,aAAc,KA8HhB,UA1DkB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KACbC,EAAiB,CACrBC,KAAM,EACNC,KAAM,EACNC,SAAU,EACVC,OAAQ,EACRC,QAAS,EACTC,KAAM,GAEFC,EAAY,SAACC,GACbA,EAAEC,QAAQR,MAAMD,EAAeC,OAC/BO,EAAEC,QAAQP,MAAMF,EAAeE,OAC/BM,EAAEC,QAAQN,UAAUH,EAAeG,WACnCK,EAAEC,QAAQL,QAAQJ,EAAeI,SACjCI,EAAEC,QAAQJ,SAASL,EAAeK,UAClCG,EAAEC,QAAQH,MAAMN,EAAeM,QAKrC,OAHAP,EAAKW,MAAMC,MAAMC,QAAQL,GACzBR,EAAKc,OAAOF,MAAMC,QAAQL,GAGxB,wBAAMO,MAAO1B,GAAb,mBAEE,sBAAI0B,MAAOtB,GACRuB,OAAOC,QAAQhB,GAAgBiB,KAAI,gBAAEC,EAAF,KAAKC,EAAL,YAClC,0BACGD,EADH,KACQC,OALd,aAUE,sBAAIL,MAAOtB,GACRO,EAAKW,MAAMC,MAAMM,KAAI,SAACT,GACrB,OACE,0BACE,gBAAC,EAAAF,KAAD,CAAMc,GAAIZ,EAAEa,MACTb,EAAEC,QAAQP,KADb,MACsBM,EAAEC,QAAQR,WAf1C,aAsBE,sBAAIa,MAAOtB,GACRO,EAAKc,OAAOF,MAAMM,KAAI,SAACT,GACtB,OACE,0BACE,gBAAC,EAAAF,KAAD,CAAMc,GAAIZ,EAAEa,MACTb,EAAEC,QAAQP,KADb,MACsBM,EAAEC,QAAQR","sources":["webpack://tfm-notes/./src/pages/index.js"],"sourcesContent":["import { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n};\nconst headingAccentStyles = {\n  color: \"#663399\",\n};\nconst paragraphStyles = {\n  marginBottom: 48,\n};\nconst codeStyles = {\n  color: \"#8A6534\",\n  padding: 4,\n  backgroundColor: \"#FFF4DB\",\n  fontSize: \"1.25rem\",\n  borderRadius: 4,\n};\nconst listStyles = {\n  marginBottom: 96,\n  paddingLeft: 0,\n};\nconst listItemStyles = {\n  fontWeight: 300,\n  fontSize: 24,\n  maxWidth: 560,\n  marginBottom: 30,\n};\n\nconst linkStyle = {\n  color: \"#8954A8\",\n  fontWeight: \"bold\",\n  fontSize: 16,\n  verticalAlign: \"5%\",\n};\n\nconst docLinkStyle = {\n  ...linkStyle,\n  listStyleType: \"none\",\n  marginBottom: 24,\n};\n\nconst descriptionStyle = {\n  color: \"#232129\",\n  fontSize: 14,\n  marginTop: 10,\n  marginBottom: 0,\n  lineHeight: 1.25,\n};\n\nconst docLink = {\n  text: \"Documentation\",\n  url: \"https://www.gatsbyjs.com/docs/\",\n  color: \"#8954A8\",\n};\n\nconst badgeStyle = {\n  color: \"#fff\",\n  backgroundColor: \"#088413\",\n  border: \"1px solid #088413\",\n  fontSize: 11,\n  fontWeight: \"bold\",\n  letterSpacing: 1,\n  borderRadius: 4,\n  padding: \"4px 6px\",\n  display: \"inline-block\",\n  position: \"relative\",\n  top: -2,\n  marginLeft: 10,\n  lineHeight: 1,\n};\n\n// data\nexport const query = graphql`\n  {\n    legacy: allSitePage(\n      filter: { path: { glob: \"/legacy/**\" } }\n      sort: { fields: [context___Film, context___Song] }\n    ) {\n      nodes {\n        ...pageComponents\n      }\n    }\n    notes: allSitePage(\n      filter: { path: { glob: \"/notes/**\" } }\n      sort: { fields: [context___Film, context___Song] }\n    ) {\n      nodes {\n        ...pageComponents\n      }\n    }\n  }\n\n  fragment pageComponents on SitePage {\n    path\n    component\n    context {\n      Song\n      Film\n      Composer\n      Lyrics\n      Artists\n      Link\n    }\n  }\n`;\n// markup\nconst IndexPage = ({ data }) => {\n  const qualityMetrics = {\n    Song: 0,\n    Film: 0,\n    Composer: 0,\n    Lyrics: 0,\n    Artists: 0,\n    Link: 0,\n  };\n  const qualCount = (f) => {\n    if (f.context.Song) qualityMetrics.Song++;\n    if (f.context.Film) qualityMetrics.Film++;\n    if (f.context.Composer) qualityMetrics.Composer++;\n    if (f.context.Lyrics) qualityMetrics.Lyrics++;\n    if (f.context.Artists) qualityMetrics.Artists++;\n    if (f.context.Link) qualityMetrics.Link++;\n  };\n  data.notes.nodes.forEach(qualCount);\n  data.legacy.nodes.forEach(qualCount);\n\n  return (\n    <main style={pageStyles}>\n      Quality Metrics:\n      <ul style={listStyles}>\n        {Object.entries(qualityMetrics).map(([k, v]) => (\n          <li>\n            {k}: {v}\n          </li>\n        ))}\n      </ul>\n      Completed:\n      <ul style={listStyles}>\n        {data.notes.nodes.map((f) => {\n          return (\n            <li>\n              <Link to={f.path}>\n                {f.context.Film} - {f.context.Song}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      Remaining:\n      <ul style={listStyles}>\n        {data.legacy.nodes.map((f) => {\n          return (\n            <li>\n              <Link to={f.path}>\n                {f.context.Film} - {f.context.Song}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"names":["pageStyles","color","padding","fontFamily","listStyles","marginBottom","paddingLeft","fontWeight","fontSize","verticalAlign","listStyleType","data","qualityMetrics","Song","Film","Composer","Lyrics","Artists","Link","qualCount","f","context","notes","nodes","forEach","legacy","style","Object","entries","map","k","v","to","path"],"sourceRoot":""}